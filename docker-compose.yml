version: "3"
services:
  # Internal services

  gateway:
    build:
      context: services/gateway
    environment:
      - TYK_GW_STORAGE_HOST=gateway-redis
      - TYK_GW_SECRET=${GATEWAY_SECRET}
      - JWT_SERVICES=tasks-api,madoc-api,configuration-api,storage-api
    ports:
      - "${PORTS_GATEWAY:-8888}:8080"
    links:
      - madoc
      - gateway-redis
      - tasks-api
      - model-api
      - madoc-ts
      - config-service
      - storage-api
      - okra
      - search
    volumes:
      - ./services/gateway/gateway.conf:/opt/tyk-gateway/tyk.conf
      - ./services/gateway/policies.json:/opt/tyk-gateway/policies/policies.json
      - ./var/certs:/openssl-certs
    depends_on:
      - certs
      - gateway-redis

  madoc:
    build:
      context: services/madoc
    links:
      - madoc-database
    environment:
      - APP_ENV=${APP_ENV}
      - OMEKA__DATABASE_HOST=madoc-database
      - OMEKA__DATABASE_NAME=${MYSQL_DATABASE}
      - OMEKA__DATABASE_USER=${MYSQL_USER}
      - OMEKA__DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - OMEKA__DATABASE_PORT=${MYSQL_PORT}
    volumes:
      - ./services/madoc/packages/auto-complete:/srv/omeka/repos/auto-complete:delegated
      - ./services/madoc/packages/default-theme:/srv/omeka/repos/default-theme:delegated
      - ./services/madoc/packages/google-analytics:/srv/omeka/repos/google-analytics:delegated
      - ./services/madoc/packages/madoc-bridge:/srv/omeka/repos/madoc-bridge:delegated
      - ./services/madoc/packages/madoc-crowd-sourcing-theme:/srv/omeka/repos/madoc-crowd-sourcing-theme:delegated
      - ./services/madoc/packages/public-user:/srv/omeka/repos/public-user:delegated
      - ./services/madoc/packages/shared-library:/srv/omeka/repos/shared-library:delegated
      - ./services/madoc/.omeka/omeka-s/application:/srv/omeka/application:cached
      - ./var/files:/srv/omeka/files
      - ./services/madoc/config/omeka-app/application.config.php:/srv/omeka/application/config/application.config.php
      - ./var/certs:/openssl-certs

  certs:
    build:
      context: services/certs
    volumes:
      - ./var/certs:/openssl-certs

  madoc-ts:
    build:
      context: services/madoc-ts
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/madoc-ts/lib:/home/node/app/lib:delegated
      - ./services/madoc-ts/src:/home/node/app/src
      - ./services/madoc-ts/package.json:/home/node/app/package.json:delegated
      - ./services/madoc-ts/yarn.lock:/home/node/app/yarn.lock:delegated
      - ./services/madoc-ts/migrations:/home/node/app/migrations:delegated
      - ./services/madoc-ts/schemas:/home/node/app/schemas:delegated
      - ./services/madoc-ts/ecosystem.config.js:/home/node/app/ecosystem.config.js
      - ./services/madoc-ts/webpack.config.js:/home/node/app/webpack.config.js
      - ./services/madoc-ts/config.json:/home/node/app/config.json
      - ./services/madoc-ts/service-jwts:/home/node/app/service-jwts
      - ./services/madoc-ts/themes:/home/node/app/themes
      - ./services/madoc-ts/translations:/home/node/app/translations
      - ./services/madoc-ts/npm:/home/node/app/npm
      - ./var/certs:/openssl-certs
      - ./var/jwt:/home/node/app/service-jwt-responses
      - ./var/files:/home/node/app/omeka-files
    environment:
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${POSTGRES_MADOC_TS_USER}
      - DATABASE_SCHEMA=${POSTGRES_MADOC_TS_SCHEMA}
      - DATABASE_PASSWORD=${POSTGRES_MADOC_TS_PASSWORD}
      - OMEKA__DATABASE_HOST=madoc-database
      - OMEKA__DATABASE_NAME=${MYSQL_DATABASE}
      - OMEKA__DATABASE_USER=${MYSQL_USER}
      - OMEKA__DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - OMEKA__DATABASE_PORT=${MYSQL_PORT}
      - OMEKA__URL=http://madoc
      - REDIS_HOST=gateway-redis
      - API_GATEWAY=http://gateway:8080
      - GATEWAY_HOST=${GATEWAY_HOST}
      - OMEKA_FILE_DIRECTORY=/home/node/app/omeka-files
      - MIGRATE=true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURITY=${SMTP_SECURITY}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - MAIL_FROM_USER=${MAIL_FROM_USER}
    ports:
      - "127.0.0.1:${PORTS_MADOC_TS_DEBUGGER:-9230}:9230"
      - "127.0.0.1:${PORTS_MADOC_TS_WEBPACK:-40493}:40493"
    links:
      - shared-postgres
      - madoc-database
      - madoc
    depends_on:
      - certs

  tasks-api:
    build:
      context: services/tasks-api
    environment:
      - SERVER_PORT=3000
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${POSTGRES_TASKS_API_USER}
      - DATABASE_SCHEMA=${POSTGRES_TASKS_API_SCHEMA}
      - DATABASE_PASSWORD=${POSTGRES_TASKS_API_PASSWORD}
      - QUEUE_LIST=${TASKS_QUEUE_LIST}
      - REDIS_HOST=gateway-redis
    links:
      - shared-postgres
      - gateway-redis
    volumes:
      - ./services/tasks-api/lib:/home/node/app/lib
      - ./services/tasks-api/schemas:/home/node/app/schemas
      - ./services/tasks-api/migrations:/home/node/app/migrations

  model-api:
    image: digirati/capture-models:v0.13.6
    environment:
      - SERVER_PORT=3000
      - DATABASE_HOST=shared-postgres
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${POSTGRES_MODELS_API_USER}
      - DATABASE_SCHEMA=${POSTGRES_MODELS_API_SCHEMA}
      - DATABASE_PASSWORD=${POSTGRES_MODELS_API_PASSWORD}
    links:
      - shared-postgres

  shared-postgres:
    build:
      context: services/shared-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MADOC_TS_USER=${POSTGRES_MADOC_TS_USER}
      - POSTGRES_MADOC_TS_SCHEMA=${POSTGRES_MADOC_TS_SCHEMA}
      - POSTGRES_MADOC_TS_PASSWORD=${POSTGRES_MADOC_TS_PASSWORD}
      - POSTGRES_TASKS_API_USER=${POSTGRES_TASKS_API_USER}
      - POSTGRES_TASKS_API_SCHEMA=${POSTGRES_TASKS_API_SCHEMA}
      - POSTGRES_TASKS_API_PASSWORD=${POSTGRES_TASKS_API_PASSWORD}
      - POSTGRES_MODELS_API_USER=${POSTGRES_MODELS_API_USER}
      - POSTGRES_MODELS_API_SCHEMA=${POSTGRES_MODELS_API_SCHEMA}
      - POSTGRES_MODELS_API_PASSWORD=${POSTGRES_MODELS_API_PASSWORD}
      - POSTGRES_CONFIG_SERVICE_USER=${POSTGRES_CONFIG_SERVICE_USER}
      - POSTGRES_CONFIG_SERVICE_SCHEMA=${POSTGRES_CONFIG_SERVICE_SCHEMA}
      - POSTGRES_CONFIG_SERVICE_PASSWORD=${POSTGRES_CONFIG_SERVICE_PASSWORD}
      - POSTGRES_SEARCH_API_USER=${POSTGRES_SEARCH_API_USER}
      - POSTGRES_SEARCH_API_SCHEMA=${POSTGRES_SEARCH_API_SCHEMA}
      - POSTGRES_SEARCH_API_PASSWORD=${POSTGRES_SEARCH_API_PASSWORD}

    ports:
      - "${PORTS_SHARED_POSTGRES:-5400}:5432"
    volumes:
      - ./var/shared-database:/var/lib/postgresql/data

  gateway-redis:
    image: redis:5-alpine

  madoc-database:
    build:
      context: services/madoc-database
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - ./var/database/data:/var/lib/mysql/
    ports:
      - "${PORTS_MYSQL_DATABASE:-3334}:3306"

  config-service:
    image: digirati/madoc_config_service_django:175410fc5b7dbef4cc259686564fbedeb60c8789
    environment:
      - USE_DOCKER=yes
      - IPYTHONDIR=/app/.ipython
      - MIGRATE=True
      - LOAD=False
      - DJANGO_DEBUG=False
      - WAITRESS=False
      - POSTGRES_HOST=shared-postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_CONFIG_SERVICE_USER}
      - POSTGRES_PASSWORD=${POSTGRES_CONFIG_SERVICE_PASSWORD}
      - POSTGRES_SCHEMA=${POSTGRES_CONFIG_SERVICE_SCHEMA}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@shared-postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    links:
      - shared-postgres
    volumes:
      - ./configuration/schemas:/app/configurator/schemas
      - ./configuration/defaults:/app/configurator/default_config

  storage-api:
    image: ghcr.io/digirati-co-uk/storage-api:latest
    environment:
      - GATEWAY_HOST=${GATEWAY_HOST}
    volumes:
      - ./var/files/storage-api:/home/node/app/files

  search:
    image: digirati/madoc-search:latest
    environment:
      - BROWSABLE=False
      - USE_DOCKER=yes
      - IPYTHONDIR=/app/.ipython
      - MIGRATE=True
      - LOAD=False
      - DEBUG=True
      - DJANGO_DEBUG=True
      - WAITRESS=False
      - POSTGRES_HOST=shared-postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_SEARCH_API_USER}
      - POSTGRES_PASSWORD=${POSTGRES_SEARCH_API_PASSWORD}
      - POSTGRES_SCHEMA=${POSTGRES_SEARCH_API_SCHEMA}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@shared-postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    links:
      - shared-postgres

  okra:
    image: digirati/okra:cf88584

